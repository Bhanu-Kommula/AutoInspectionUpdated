spring.application.name=api-gateway

server.port=8088

eureka.client.service-url.defaultZone=http://localhost:8761/eureka

spring.cloud.gateway.server.webflux.discovery.locator.enabled=true
spring.cloud.gateway.server.webflux.discovery.locator.lower-case-service-id=true

# Route all requests through /{serviceId}/** and strip the first path segment
spring.cloud.gateway.server.webflux.discovery.locator.predicates[0].name=Path
spring.cloud.gateway.server.webflux.discovery.locator.predicates[0].args[pattern]='/' + serviceId + '/**'
spring.cloud.gateway.server.webflux.discovery.locator.filters[0].name=StripPrefix
spring.cloud.gateway.server.webflux.discovery.locator.filters[0].args[parts]=1

# Manual route for chat service (Node.js service, not registered with Eureka)
spring.cloud.gateway.routes[0].id=chat-service
spring.cloud.gateway.routes[0].uri=http://localhost:8089
spring.cloud.gateway.routes[0].predicates[0]=Path=/chat/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

# CORS configuration for all services - simplified for localhost development
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:3000
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allow-credentials=true
