# Production Configuration for Tech Dashboard Service

# Server Configuration
server.port=${PORT:8080}
server.servlet.context-path=/

# Reverse-proxy awareness for Render
server.forward-headers-strategy=framework
server.use-forward-headers=true

# Database Configuration - Set via environment variables in Render
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Database SSL (required for Render)
spring.datasource.hikari.data-source-properties.sslmode=require

# Connection pooling (important for free Postgres)
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=900000

# JPA Configuration for Production
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.open-in-view=false

# Flyway Migration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.clean-disabled=true
spring.flyway.validate-on-migrate=true

# Service Discovery - Production Eureka
eureka.client.serviceUrl.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:https://service-registry.onrender.com/eureka/}
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=${HOSTNAME:localhost}

# Disable Eureka to prevent startup issues (using manual routes instead)
eureka.client.enabled=false
eureka.client.fetch-registry=false
eureka.client.register-with-eureka=false

# API Gateway base URL for Feign clients
gateway.url=${GATEWAY_URL:https://api-gateway.onrender.com}

# Remote Service URLs
posts-service.url=${POSTS_SERVICE_URL:https://postings-service.onrender.com/api/v1}
technician-service.url=${TECHNICIAN_SERVICE_URL:https://technician-service.onrender.com/api/v1}

# File Upload Configuration
app.file.upload.path=${FILE_UPLOAD_PATH:./uploads/inspections/}
app.file.max-individual-size=${MAX_INDIVIDUAL_SIZE:31457280}
app.file.max-files-per-report=${MAX_FILES_PER_REPORT:50}

# WebClient Configuration
app.webclient.timeout=${WEB_CLIENT_TIMEOUT:10000}

# Logging Configuration
logging.level.root=INFO
logging.level.com.auto.technician.dashboard=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN

# Actuator Configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.endpoints.web.base-path=/actuator

# Health check endpoint
management.health.db.enabled=true
management.health.diskspace.enabled=true

# Admin Dashboard Configuration
app.admin.checklist-items-per-report=66
app.admin.default-page-size=20
app.admin.max-page-size=100
app.admin.default-top-performers-limit=10
app.admin.max-top-performers-limit=50
app.admin.default-days-to-keep=90
app.admin.min-days-to-keep=30

# NO SECURITY - Disable all security features
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.http-only=false

# CORS Configuration (Gateway-only as per project rules)
# Individual services should not define CORS - handled by API Gateway
