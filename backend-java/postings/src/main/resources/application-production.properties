# Production Configuration for Postings Service

# Server Configuration
server.port=${PORT:8081}
server.servlet.context-path=

# Reverse-proxy awareness for Render
server.forward-headers-strategy=framework
server.use-forward-headers=true

# Database Configuration (will be overridden by environment variables)
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Database SSL (required for Render)
spring.datasource.hikari.data-source-properties.sslmode=require

# Connection pooling (important for free Postgres)
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=2
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=900000

# JPA Configuration for Production
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.open-in-view=false

# Flyway Migration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.clean-disabled=true
spring.flyway.validate-on-migrate=true
spring.flyway.baseline-version=0
spring.flyway.table=flyway_schema_history_postings

# Service Discovery - Production Eureka
eureka.client.serviceUrl.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:https://service-registry.onrender.com/eureka/}
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=${HOSTNAME:localhost}
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Logging Configuration
logging.level.root=INFO
logging.level.com.auto.postings=INFO
logging.level.org.springframework.web=WARN
logging.level.org.hibernate.SQL=WARN

# Actuator Configuration
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.endpoints.web.base-path=/actuator

# Health check endpoint
management.health.db.enabled=true
management.health.diskspace.enabled=true

# NO SECURITY - Disable all security features
server.servlet.session.cookie.secure=false
server.servlet.session.cookie.http-only=false

# CORS Configuration (Gateway-only as per project rules)
# Individual services should not define CORS - handled by API Gateway
