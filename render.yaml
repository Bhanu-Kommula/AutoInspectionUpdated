services:
  # Frontend React App
  - type: web
    name: dealer-frontend
    runtime: static
    rootDir: frontend/dealer-frontend
    buildCommand: npm ci && npm run build
    staticPublishPath: build
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

  # API Gateway
  - type: web
    name: api-gateway
    runtime: docker
    plan: free
    rootDir: backend-java/gateway
    healthCheckPath: /actuator/health
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: production
      - key: SPRING_DATASOURCE_URL
        fromDatabase:
          name: autoinspect-db
          property: connectionString
      - key: SPRING_DATASOURCE_USERNAME
        fromDatabase:
          name: autoinspect-db
          property: user
      - key: SPRING_DATASOURCE_PASSWORD
        fromDatabase:
          name: autoinspect-db
          property: password
      - key: FRONTEND_ORIGIN
        value: https://dealer-frontend.onrender.com

  # Dealer Service
  - type: web
    name: dealer-service
    runtime: docker
    plan: free
    rootDir: backend-java/dealer
    healthCheckPath: /actuator/health
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: production
      - key: SPRING_DATASOURCE_URL
        fromDatabase:
          name: autoinspect-db
          property: connectionString
      - key: SPRING_DATASOURCE_USERNAME
        fromDatabase:
          name: autoinspect-db
          property: user
      - key: SPRING_DATASOURCE_PASSWORD
        fromDatabase:
          name: autoinspect-db
          property: password
      - key: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
        value: https://api-gateway.onrender.com/eureka/

  # Postings Service
  - type: web
    name: postings-service
    runtime: docker
    plan: free
    rootDir: backend-java/postings
    healthCheckPath: /actuator/health
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: production
      - key: SPRING_DATASOURCE_URL
        fromDatabase:
          name: autoinspect-db
          property: connectionString
      - key: SPRING_DATASOURCE_USERNAME
        fromDatabase:
          name: autoinspect-db
          property: user
      - key: SPRING_DATASOURCE_PASSWORD
        fromDatabase:
          name: autoinspect-db
          property: password
      - key: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
        value: https://api-gateway.onrender.com/eureka/

  # Tech Dashboard Service
  - type: web
    name: tech-dashboard-service
    runtime: docker
    plan: free
    rootDir: backend-java/tech-dashboard
    healthCheckPath: /actuator/health
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: production
      - key: SPRING_DATASOURCE_URL
        fromDatabase:
          name: autoinspect-db
          property: connectionString
      - key: SPRING_DATASOURCE_USERNAME
        fromDatabase:
          name: autoinspect-db
          property: user
      - key: SPRING_DATASOURCE_PASSWORD
        fromDatabase:
          name: autoinspect-db
          property: password
      - key: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
        value: https://api-gateway.onrender.com/eureka/

  # Technician Service (Fixed typo)
  - type: web
    name: technician-service
    runtime: docker
    plan: free
    rootDir: backend-java/techincian
    healthCheckPath: /actuator/health
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: production
      - key: SPRING_DATASOURCE_URL
        fromDatabase:
          name: autoinspect-db
          property: connectionString
      - key: SPRING_DATASOURCE_USERNAME
        fromDatabase:
          name: autoinspect-db
          property: user
      - key: SPRING_DATASOURCE_PASSWORD
        fromDatabase:
          name: autoinspect-db
          property: password
      - key: EUREKA_CLIENT_SERVICEURL_DEFAULTZONE
        value: https://api-gateway.onrender.com/eureka/

  # Service Registry
  - type: web
    name: service-registry
    runtime: docker
    plan: free
    rootDir: backend-java/serviceregistry
    healthCheckPath: /actuator/health
    envVars:
      - key: SPRING_PROFILES_ACTIVE
        value: production

  # Node.js Chat Service
  - type: web
    name: chat-service
    runtime: node
    plan: free
    rootDir: backend-node/chat-service
    buildCommand: npm install
    startCommand: node server.js
    healthCheckPath: /health
    envVars:
      - key: DB_HOST
        fromDatabase:
          name: autoinspect-db
          property: host
      - key: DB_USER
        fromDatabase:
          name: autoinspect-db
          property: user
      - key: DB_PASSWORD
        fromDatabase:
          name: autoinspect-db
          property: password
      - key: DB_NAME
        fromDatabase:
          name: autoinspect-db
          property: database
      - key: DB_PORT
        value: 5432

databases:
  - name: autoinspect-db
    plan: free
